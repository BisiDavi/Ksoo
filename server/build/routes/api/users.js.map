{"version":3,"sources":["../../../src/routes/api/users.js"],"names":["router","storage","multer","diskStorage","destination","req","file","cb","__dirname","filename","fileName","originalname","toLowerCase","split","join","Date","now","upload","fileFilter","mimetype","Error","put","requireJwtAuth","single","res","next","tempUser","User","findById","params","id","status","json","message","user","role","error","body","details","avatarPath","password","provider","existingUser","findOne","username","updatedUser","avatar","name","Object","keys","forEach","k","undefined","findByIdAndUpdate","$set","new","err","get","me","toJSON","users","find","sort","createdAt","map","m","delete","Message","deleteMany","findByIdAndRemove"],"mappings":"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","sourcesContent":["import { Router } from 'express';\r\nimport multer from 'multer';\r\nimport { resolve } from 'path';\r\n\r\nimport requireJwtAuth from '../../middleware/requireJwtAuth';\r\nimport User, { hashPassword, validateUser } from '../../models/User';\r\nimport Message from '../../models/Message';\r\nimport { seedDb } from '../../utils/seed';\r\n\r\nconst router = Router();\r\n\r\nconst storage = multer.diskStorage({\r\n  destination: function (req, file, cb) {\r\n    cb(null, resolve(__dirname, '../../../public/images'));\r\n  },\r\n  filename: function (req, file, cb) {\r\n    const fileName = file.originalname.toLowerCase().split(' ').join('-');\r\n    cb(null, `avatar-${Date.now()}-${fileName}`);\r\n  },\r\n});\r\n\r\nconst upload = multer({\r\n  storage: storage,\r\n  fileFilter: (req, file, cb) => {\r\n    if (file.mimetype == 'image/png' || file.mimetype == 'image/jpg' || file.mimetype == 'image/jpeg') {\r\n      cb(null, true);\r\n    } else {\r\n      cb(null, false);\r\n      return cb(new Error('Only .png, .jpg and .jpeg format allowed!'));\r\n    }\r\n  },\r\n});\r\n\r\n//`checkit`, which is probably the option I'd suggest if  `validatem`\r\n\r\nrouter.put('/:id', [requireJwtAuth, upload.single('avatar')], async (req, res, next) => {\r\n  try {\r\n    const tempUser = await User.findById(req.params.id);\r\n    if (!tempUser) return res.status(404).json({ message: 'No such user.' });\r\n    if (!(tempUser.id === req.user.id || req.user.role === 'ADMIN'))\r\n      return res.status(400).json({ message: 'You do not have privilegies to edit this user.' });\r\n\r\n    //validate name, username and password\r\n    const { error } = validateUser(req.body);\r\n    if (error) return res.status(400).json({ message: error.details[0].message });\r\n\r\n    let avatarPath = null;\r\n    if (req.file) {\r\n      avatarPath = req.file.filename;\r\n    }\r\n\r\n    // if fb or google user provider dont update password\r\n    let password = null;\r\n    if (req.user.provider === 'email' && req.body.password && req.body.password !== '') {\r\n      password = await hashPassword(req.body.password);\r\n    }\r\n\r\n    const existingUser = await User.findOne({ username: req.body.username });\r\n    if (existingUser && existingUser.id !== tempUser.id) {\r\n      return res.status(400).json({ message: 'Username alredy taken.' });\r\n    }\r\n\r\n    const updatedUser = { avatar: avatarPath, name: req.body.name, username: req.body.username, password };\r\n    // remove '', null, undefined\r\n    Object.keys(updatedUser).forEach((k) => !updatedUser[k] && updatedUser[k] !== undefined && delete updatedUser[k]);\r\n    // console.log(req.body, updatedUser);\r\n    const user = await User.findByIdAndUpdate(tempUser.id, { $set: updatedUser }, { new: true });\r\n\r\n    res.status(200).json({ user });\r\n  } catch (err) {\r\n    res.status(500).json({ message: 'Something went wrong.' });\r\n  }\r\n});\r\n\r\nrouter.get('/reseed', async (req, res) => {\r\n  await seedDb();\r\n  res.json({ message: 'Database reseeded successfully.' });\r\n});\r\n\r\nrouter.get('/me', requireJwtAuth, (req, res) => {\r\n  const me = req.user.toJSON();\r\n  res.json({ me });\r\n});\r\n\r\nrouter.get('/:username', requireJwtAuth, async (req, res) => {\r\n  try {\r\n    const user = await User.findOne({ username: req.params.username });\r\n    if (!user) return res.status(404).json({ message: 'No user found.' });\r\n    res.json({ user: user.toJSON() });\r\n  } catch (err) {\r\n    res.status(500).json({ message: 'Something went wrong.' });\r\n  }\r\n});\r\n\r\nrouter.get('/', requireJwtAuth, async (req, res) => {\r\n  try {\r\n    const users = await User.find().sort({ createdAt: 'desc' });\r\n\r\n    res.json({\r\n      users: users.map((m) => {\r\n        return m.toJSON();\r\n      }),\r\n    });\r\n  } catch (err) {\r\n    res.status(500).json({ message: 'Something went wrong.' });\r\n  }\r\n});\r\n\r\nrouter.delete('/:id', requireJwtAuth, async (req, res) => {\r\n  try {\r\n    const tempUser = await User.findById(req.params.id);\r\n    if (!tempUser) return res.status(404).json({ message: 'No such user.' });\r\n    if (!(tempUser.id === req.user.id || req.user.role === 'ADMIN'))\r\n      return res.status(400).json({ message: 'You do not have privilegies to delete that user.' });\r\n\r\n    // if (['email0@email.com', 'email1@email.com'].includes(tempUser.email))\r\n    //   return res.status(400).json({ message: 'You can not delete seeded user.' });\r\n\r\n    //delete all messages from that user\r\n    await Message.deleteMany({ user: tempUser.id });\r\n    //delete user\r\n    const user = await User.findByIdAndRemove(tempUser.id);\r\n    res.status(200).json({ user });\r\n  } catch (err) {\r\n    res.status(500).json({ message: 'Something went wrong.' });\r\n  }\r\n});\r\n\r\nexport default router;\r\n"],"file":"users.js"}