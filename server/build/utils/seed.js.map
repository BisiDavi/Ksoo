{"version":3,"sources":["../../src/utils/seed.js"],"names":["seedDb","console","log","User","deleteMany","Message","__dirname","process","env","IMAGES_FOLDER_PATH","usersPromises","Array","keys","map","index","i","user","provider","username","email","password","name","faker","findName","avatar","bio","lorem","sentences","role","registerUser","Promise","all","save","messagePromises","message","text","users","find","messages","threeMessagesIds","slice","m","id","updateOne","_id","$push","j","Math","floor","$set"],"mappings":"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","sourcesContent":["import faker from 'faker';\r\nimport { join } from 'path';\r\n\r\nimport User from '../models/User';\r\nimport Message from '../models/Message';\r\nimport { deleteAllAvatars } from './utils';\r\n\r\nexport const seedDb = async () => {\r\n  console.log('Seeding database...');\r\n\r\n  await User.deleteMany({});\r\n  await Message.deleteMany({});\r\n  await deleteAllAvatars(join(__dirname, '../..', process.env.IMAGES_FOLDER_PATH));\r\n\r\n  // create 3 users\r\n  const usersPromises = [...Array(3).keys()].map((index, i) => {\r\n    const user = new User({\r\n      provider: 'email',\r\n      username: `user${index}`,\r\n      email: `email${index}@email.com`,\r\n      password: '123456789',\r\n      name: faker.name.findName(),\r\n      // avatar: faker.image.avatar(),\r\n      avatar: `avatar${index}.jpg`,\r\n      bio: faker.lorem.sentences(3),\r\n    });\r\n\r\n    if (index === 0) {\r\n      user.role = 'ADMIN';\r\n    }\r\n    user.registerUser(user, () => {});\r\n\r\n    return user;\r\n  });\r\n\r\n  await Promise.all(\r\n    usersPromises.map(async (user) => {\r\n      await user.save();\r\n    }),\r\n  );\r\n\r\n  // create 9 messages\r\n  const messagePromises = [...Array(9).keys()].map((index, i) => {\r\n    const message = new Message({\r\n      text: faker.lorem.sentences(3),\r\n    });\r\n    return message;\r\n  });\r\n\r\n  await Promise.all(\r\n    messagePromises.map(async (message) => {\r\n      await message.save();\r\n    }),\r\n  );\r\n\r\n  const users = await User.find();\r\n  const messages = await Message.find();\r\n\r\n  // every user 3 messages\r\n  users.map(async (user, index) => {\r\n    const threeMessagesIds = messages.slice(index * 3, index * 3 + 3).map((m) => m.id);\r\n    await User.updateOne({ _id: user.id }, { $push: { messages: threeMessagesIds } });\r\n  });\r\n\r\n  // 0,1,2 message belong to user 0 ...\r\n  messages.map(async (message, index) => {\r\n    const j = Math.floor(index / 3);\r\n    const user = users[j];\r\n    await Message.updateOne(\r\n      { _id: message.id },\r\n      {\r\n        $set: {\r\n          user: user.id,\r\n        },\r\n      },\r\n    );\r\n  });\r\n};\r\n"],"file":"seed.js"}