{"version":3,"sources":["../../src/services/jwtStrategy.js"],"names":["isProduction","process","env","NODE_ENV","secretOrKey","JWT_SECRET_PROD","JWT_SECRET_DEV","jwtLogin","JwtStrategy","jwtFromRequest","ExtractJwt","fromHeader","payload","done","user","User","findById","id","err","passport","use"],"mappings":";;AAAA;;AACA;;AAEA;;;;AAEA,MAAMA,YAAY,GAAGC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA9C;AACA,MAAMC,WAAW,GAAGJ,YAAY,GAAGC,OAAO,CAACC,GAAR,CAAYG,eAAf,GAAiCJ,OAAO,CAACC,GAAR,CAAYI,cAA7E,C,CAEA;;AACA,MAAMC,QAAQ,GAAG,IAAIC,qBAAJ,CACf;AACEC,EAAAA,cAAc,EAAEC,wBAAWC,UAAX,CAAsB,cAAtB,CADlB;AAEEP,EAAAA;AAFF,CADe,EAKf,OAAOQ,OAAP,EAAgBC,IAAhB,KAAyB;AACvB,MAAI;AACF,UAAMC,IAAI,GAAG,MAAMC,cAAKC,QAAL,CAAcJ,OAAO,CAACK,EAAtB,CAAnB;;AAEA,QAAIH,IAAJ,EAAU;AACRD,MAAAA,IAAI,CAAC,IAAD,EAAOC,IAAP,CAAJ;AACD,KAFD,MAEO;AACLD,MAAAA,IAAI,CAAC,IAAD,EAAO,KAAP,CAAJ;AACD;AACF,GARD,CAQE,OAAOK,GAAP,EAAY;AACZL,IAAAA,IAAI,CAACK,GAAD,EAAM,KAAN,CAAJ;AACD;AACF,CAjBc,CAAjB;;AAoBAC,kBAASC,GAAT,CAAab,QAAb","sourcesContent":["import passport from 'passport';\r\nimport { Strategy as JwtStrategy, ExtractJwt } from 'passport-jwt';\r\n\r\nimport User from '../models/User';\r\n\r\nconst isProduction = process.env.NODE_ENV === 'production';\r\nconst secretOrKey = isProduction ? process.env.JWT_SECRET_PROD : process.env.JWT_SECRET_DEV;\r\n\r\n// JWT strategy\r\nconst jwtLogin = new JwtStrategy(\r\n  {\r\n    jwtFromRequest: ExtractJwt.fromHeader('x-auth-token'),\r\n    secretOrKey,\r\n  },\r\n  async (payload, done) => {\r\n    try {\r\n      const user = await User.findById(payload.id);\r\n\r\n      if (user) {\r\n        done(null, user);\r\n      } else {\r\n        done(null, false);\r\n      }\r\n    } catch (err) {\r\n      done(err, false);\r\n    }\r\n  },\r\n);\r\n\r\npassport.use(jwtLogin);\r\n"],"file":"jwtStrategy.js"}